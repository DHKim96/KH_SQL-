/*
    DDL 실습 문제
*/
-- 1.카테고리 테이블
CREATE TABLE TB_CATEGORY (
    NAME VARCHAR2(10),
    USE_YN CHAR(1) DEFAULT 'Y'
);
-- 2. 과목 구분 테이블
CREATE TABLE TB_CLASS_TYPE(
    NO VARCHAR2(5) CONSTRAINT TCT_PK_NO PRIMARY KEY,
    NAME VARCHAR2(10)
);
-- 3. TB_CATEGORY.NAME 에 PRIMARY KEY 생성하기
ALTER TABLE TB_CATEGORY 
    ADD CONSTRAINT TCATEGORY_PK_NAME PRIMARY KEY(NAME);

-- 4. TB_CLASS_TYPE 테이블의 NAME 컬럼에 NULL 값이 들어가지 않도록 속성 변경
ALTER TABLE TB_CLASS_TYPE MODIFY NAME CONSTRAINT TCT_NT_NAME NOT NULL;

-- 5. 두 테이블에서 컬럼명이 NO 인 것은 기존 타입을 유지하면서 크기는 10 으로
--      컬럼명이 NAME 인 것은 마찬가지로 기존 타입 유지하면서 크기 20으로 변경하기

ALTER TABLE TB_CATEGORY MODIFY NAME VARCHAR2(20);
ALTER TABLE TB_CLASS_TYPE MODIFY NO VARCHAR2(10);

-- 6. 두 테이블의 NO 컬럼과 NAME 컬럼의 이름을 각각 TB_ 를 제외한 테이블명이 앞에 붙은 형태로 변경
-- EX) CATEGORY_NAME
ALTER TABLE TB_CATEGORY RENAME COLUMN NAME TO CATEGORY_NAME;
ALTER TABLE TB_CLASS_TYPE RENAME COLUMN NO TO CLASS_TYPE_NO;

-- 7. TB_CATEGORY 테이블과 TB_CLASS_TYPE 테이블의 PRIMARY KEY 이름을 다음과 같이 변경하시오
-- PRIMARY KEY 이름은 "PK_ + 컬럼이름" 으로 지정할 것( EX.PK_CATEGORY_NAME)

ALTER TABLE TB_CATEGORY RENAME CONSTRAINT TCATEGORY_PK_NAME TO PK_CATEGORY_NAME;
ALTER TABLE TB_CLASS_TYPE RENAME CONSTRAINT TCT_PK_NO TO PK_CLASS_TYPE_NO;

-- 8. 다음과 같은 INSERT 문 수행할 것
INSERT INTO TB_CATEGORY 
VALUES ('공학', 'Y');
INSERT INTO TB_CATEGORY 
VALUES ('자연과학', 'Y');
INSERT INTO TB_CATEGORY 
VALUES ('의학', 'Y');
INSERT INTO TB_CATEGORY 
VALUES ('예체능', 'Y');
INSERT INTO TB_CATEGORY 
VALUES ('인문사회', 'Y');

SELECT * FROM TB_CATEGORY;

COMMIT;

-- 9. TB_DEPARTMENT.CATEGORY 컬럼이 TB_CATEGORY.CATEGORY_NAME 컬럼을 부모값으로
--      참조하도록 FOREIGN KEY 지정할 것
--      이때 KEY 이름은 FK_테이블명_컬럼명 으로 지정할 것
ALTER TABLE TB_DEPARTMENT 
ADD CONSTRAINT FK_DEPARTMENT_CATEGORY FOREIGN KEY(CATEGORY) REFERENCES TB_CATEGORY(CATEGORY_NAME);

-- 10. 춘 기술대학교 학생들의 정보만이 포함되어 있는 학생일반정보 VIEW 를 만들고자 할 때 아래 내용을
--      참고하여 적절한 SQL 문을 작성할 것
CREATE VIEW VW_STUINFO
AS (SELECT STUDENT_NO, STUDENT_NAME, STUDENT_ADDRESS 
    FROM TB_STUDENT);

-- 11
CREATE VIEW VW_INTERVIEW
AS (SELECT STUDENT_NAME, DEPARTMENT_NAME, NVL(PROFESSOR_NAME, '지도교수없음') AS "지도교수명"
    FROM TB_STUDENT
    JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
    LEFT JOIN TB_PROFESSOR ON (COACH_PROFESSOR_NO = PROFESSOR_NO));

SELECT * FROM VW_INTERVIEW;

-- 12
CREATE VIEW VW_NUMOFSTUBYDEP
AS (SELECT DEPARTMENT_NAME, COUNT(*) AS "STUDENT_COUNT"
    FROM TB_STUDENT
    JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
    GROUP BY DEPARTMENT_NAME);

-- 13.
UPDATE VW_STUINFO
SET STUDENT_NAME = '김동현'
WHERE STUDENT_NO = 'A213046';

-- 14.
CREATE VIEW VW_STUINFO
AS (SELECT STUDENT_NO, STUDENT_NAME, STUDENT_ADDRESS 
    FROM TB_STUDENT)
WITH READ ONLY;

-- 15. 
SELECT CLASS_NO, CLASS_NAME, 학생수
FROM (  SELECT CLASS_NO, CLASS_NAME, COUNT(STUDENT_NO) AS "학생수"
        FROM(   SELECT CLASS_NO, CLASS_NAME, STUDENT_NO
                FROM TB_STUDENT
                JOIN TB_GRADE USING (STUDENT_NO)
                JOIN TB_CLASS USING (CLASS_NO)
                WHERE TERM_NO BETWEEN 200501 AND 200904)
        GROUP BY CLASS_NO, CLASS_NAME
        ORDER BY COUNT(STUDENT_NO) DESC )
WHERE ROWNUM <= 3; 





